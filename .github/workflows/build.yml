name: Build D sources

on:
  pull_request:
    types: [ synchronize ]

defaults:
  run:
    shell: bash

jobs:
  setup-build-matrix:
    name: Setup build matrix
    runs-on: ubuntu-latest

    outputs:
      matrix-json: ${{ steps.read-matrix.outputs.matrix-json }}

    steps:
      - name: Checkout PR `.github` directory
        uses: snow-actions/sparse-checkout@v1.1.0
        with:
          patterns: |
            .github

      - name: Read build matrix
        id: read-matrix
        working-directory: ./.github/workflows
        run: |
          json="$(cat build-matrix.json)"

          # https://github.community/t/set-output-truncates-multiline-strings/16852/3
          # The following lines are only required for multi line json
          json="${json//'%'/'%25'}"
          json="${json//$'\n'/'%0A'}"
          json="${json//$'\r'/'%0D'}"

          echo "::set-output name=matrix-json::$json"

  define-dub-cache-paths:
    name: Setup dub cache paths
    runs-on: ubuntu-latest

    outputs:
      dub-cache-directories: ${{ steps.read-dub-cache-directories.outputs.dub-cache-directories }}

    steps:
      - name: Checkout PR `.github` directory
        uses: snow-actions/sparse-checkout@v1.1.0
        with:
          patterns: |
            .github

      - name: Read dub cache directories
        id: read-dub-cache-directories
        working-directory: ./.github/workflows
        run: |
          json="$(cat dub-cache-directories.json)"

          # https://github.community/t/set-output-truncates-multiline-strings/16852/3
          # The following lines are only required for multi line json
          json="${json//'%'/'%25'}"
          json="${json//$'\n'/'%0A'}"
          json="${json//$'\r'/'%0D'}"

          echo "::set-output name=dub-cache-directories::$json"


  upgrade-d-sources:
    name: Upgrade D sources
    needs: define-dub-cache-paths
    runs-on: ubuntu-latest

    steps:
      - name: Install D compiler
        id: install-d-compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest

      - name: Cache dub system cache
        id: cache-dub-system-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ format('needs.read-dub-cache-directories.outputs.dub-cache-directories.{0}.local', ${{ runner.os }} ) }}
          key: ${{ runner.os }}-${{ steps.install-d-compiler.with.compiler }}-dub-cache-directories

      - name: Fetch dfix
        run: dub fetch dfix -v --cache=local

      - name: Build dfix
        run: dub build dfix -v --build=release --non-interactive --cache=local

      - name: Checkout PR
        uses: actions/checkout@v2

      - name: Run dfix
        run: dub run dfix -v --build=release --non-interactive --cache=local -- .

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          pull_strategy: '--no-ff'

  build:
    name: Build
    needs: [ setup-build-matrix, upgrade-d-sources ]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-json) }}

    steps:
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Dub build
        run: dub build