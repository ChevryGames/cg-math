name: Build D sources

on:
  pull_request:
    types: [ synchronize ]

defaults:
  run:
    shell: bash

jobs:
  setup-build-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix-json: ${{ steps.read-matrix.outputs.matrix-json }}

    steps:
      - name: Checkout PR `.github` directory
        uses: snow-actions/sparse-checkout@v1.1.0
        with:
          patterns: |
            .github

      - name: Read build matrix
        id: read-matrix
        working-directory: ./.github/workflows
        run: |
          json="$(cat build-matrix.json)"

          # https://github.community/t/set-output-truncates-multiline-strings/16852/3
          # The following lines are only required for multi line json
          json="${json//'%'/'%25'}"
          json="${json//$'\n'/'%0A'}"
          json="${json//$'\r'/'%0D'}"

          echo "::set-output name=matrix-json::$json"

  setup-dev-env:
    # TODO: Cache
    name: Setup development environment
    needs: setup-build-matrix

    strategy:
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-json) }}

    runs-on: ${{ matrix.os }}

    steps:
      # - name: Cache D compiler
      #   id: cache-d-compiler
      #   uses: actions/cache@v2
      #   with:
      #     path: prime-numbers
      #     key: ${{ runner.os }}-primes

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          dc: ${{ matrix.dc }}

      - name: DEBUG FILES
        run: |
          ls -la
          exit 1

  build:
    name: Build
    needs: setup-dev-env

    strategy:
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-json) }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Dub build
        run: dub build